{"version":3,"sources":["components/taskList/taskItems/buttons/button-importance/ButtonImportance.jsx","components/taskList/taskItems/buttons/button-active/ButtonActive.jsx","components/taskList/taskItems/TaskItem.jsx","components/taskList/TaskList.jsx","components/taskList/taskItems/buttons/button-disp-list/ButtonDispList.jsx","components/form/form.jsx","components/loader/loader.jsx","App.jsx"],"names":["ButtonImportance","id","importance","importanceTask","buttonText","onClick","ButtonActive","active","activeTask","TaskItem","name","deleteTask","style","fontWeight","color","className","TaskList","taskList","map","item","props","ButtonDispList","displayList","Form","addNewTask","useState","newTask","setInputNewTask","disabledButton","value","onChange","e","target","disabled","Loader","styles","loader","App","setTaskList","displayedList","setDisplayedList","inputFilterValue","setInputFilterValue","newTaskList","filter","includes","newTaskName","prevState","arrId","Math","max","apply","push","type","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce0fe062.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const ButtonImportance = ({id, importance, importanceTask}) => {\r\n        const buttonText = (importance === false ?  'отметить как важное': 'снять отметку как важное');\r\n        return (\r\n     <button onClick={() => importanceTask(id)}> {buttonText}</button>);\r\n    \r\n \r\n};","import React, { Component } from 'react';\r\n\r\nexport const ButtonActive = ({id, active, activeTask}) =>{\r\n    \r\n\r\n        const buttonText = (active === false ?  'активировать задачу': 'завершить задачу');\r\n        return (\r\n     <button onClick={() => activeTask(id)}> {buttonText}</button>);\r\n\r\n \r\n};","import React from 'react';\r\nimport {ButtonImportance} from './buttons/button-importance/ButtonImportance';\r\nimport {ButtonActive} from './buttons/button-active/ButtonActive';\r\n\r\n\r\nexport const TaskItem = ({id,importance, active, name, deleteTask, importanceTask,  activeTask}) => {\r\n       const style = {\r\n            fontWeight: (importance === false ? 'normal': 'bolder'),\r\n            color: (active === false ? 'rgb(168, 168, 168)': 'black')\r\n        };\r\n\r\n        return (\r\n            <li className='line'>\r\n                <div className = 'tasks' style={style}> {name} </div>\r\n                <div className='buttonLine'>\r\n                    < ButtonImportance importance={importance} id={id} importanceTask={importanceTask}\r\n                     activeTask={activeTask}/>\r\n                    <ButtonActive active={active} id={id}  activeTask={activeTask}/>\r\n                    <button onClick={() => deleteTask(id)}>удалить задачу</button>\r\n                </div>\r\n            </li>);\r\n        \r\n   \r\n};\r\n\r\n","import React from 'react';\r\nimport {TaskItem} from './taskItems/TaskItem';\r\n\r\nexport  const TaskList = ({taskList =[], deleteTask, importanceTask,  activeTask}) => {\r\n        return (\r\n            \r\n            <ul> список задач\r\n                {taskList.map((item) => {\r\n                    const {...props} = item;\r\n                    return <TaskItem key={item.id} {...props} deleteTask={deleteTask} \r\n                    importanceTask={importanceTask} activeTask={activeTask}/>;\r\n                } )}\r\n            </ul>\r\n\r\n        );\r\n    \r\n        \r\n};","import React from 'react';\r\n\r\nexport const ButtonDispList = ({displayList}) => {\r\n    \r\n    return(\r\n        <div>\r\n            <button key={101} onClick={ () => displayList('all')}>все задачи</button>\r\n            <button key={102} onClick={ () => displayList('active')}>активные задачи</button>\r\n            <button key={103} onClick={ () => displayList('completed')}>завершенные задачи</button>\r\n        </div>\r\n    );\r\n};","import React, {useState} from 'react';\r\n\r\nexport const Form = ({addNewTask}) => {\r\n    const [newTask, setInputNewTask] = useState('');\r\n\r\n    const inputNewTask = (e) =>setInputNewTask(e.target.value);\r\n\r\n    const disabledButton = (newTask === '');\r\n\r\n    return (\r\n        <div>\r\n            <input value={newTask} onChange={inputNewTask}/>\r\n            <button disabled={disabledButton} onClick={() => addNewTask(newTask)}>\r\n                добавить запись\r\n            </button>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport styles from './styles.scss';\r\n\r\nexport const Loader =() => <div className={styles.loader}><div/> </div>;","import React, {useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {TaskList} from './components/taskList/TaskList';\r\nimport {ButtonDispList} from './components/taskList/taskItems/buttons/button-disp-list/ButtonDispList';\r\nimport {Form} from './components/form/form';\r\nimport {Loader} from './components/loader/loader';\r\n\r\n\r\nconst App = () => {\r\n\r\n    let taskListState = [\r\n        {\r\n            id: 1,\r\n            name: 'learn js',\r\n            importance: true,\r\n            active: false\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'task2',\r\n            importance: false,\r\n            active: true\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'drink coffee',\r\n            importance: false,\r\n            active: false\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'learn react',\r\n            importance: true,\r\n            active: true\r\n        },\r\n    ];\r\n\r\n    const [taskList, setTaskList] = useState(taskListState);\r\n    const [displayedList, setDisplayedList] = useState('all');\r\n    const [inputFilterValue, setInputFilterValue] = useState('');\r\n\r\n\r\n    const importanceTask = (id) => {\r\n        setTaskList((prevState) => {\r\n            const newTaskList = prevState.map(item => {\r\n                if (item.id === id) {\r\n                    item.importance = (item.importance === false ? true : false);\r\n                }\r\n                return item;\r\n            });\r\n            return newTaskList;\r\n        });\r\n    };\r\n\r\n\r\n    const activeTask = (id) => {\r\n        setTaskList((prevState) => {\r\n            const newTaskList = prevState.map(item => {\r\n                if (item.id === id) {\r\n                    item.active = (item.active === false ? true : false);\r\n                }\r\n                return item;\r\n            });\r\n            return newTaskList;\r\n        });\r\n    };\r\n\r\n\r\n    const deleteTask = (id) => {\r\n        setTaskList((prevState) => {\r\n            const newTaskList = (prevState.filter(item => item.id !== id));\r\n            return newTaskList;\r\n        });\r\n    };\r\n\r\n    const displayList = (key) => setDisplayedList(key);\r\n    const inputHandler = (e) => setInputFilterValue(e.target.value);\r\n    const filteredTaskList = () => taskList.filter(item => item.name.includes(inputFilterValue));\r\n\r\n    const addNewTask = (newTaskName) => {\r\n        setTaskList((prevState) => {\r\n            const arrId = prevState.map(item => item.id);\r\n            const newId = Math.max.apply(null, arrId) + 1;\r\n\r\n            const newTask = {\r\n                id: newId,\r\n                name: newTaskName,\r\n                importance: true,\r\n                active: true\r\n            };\r\n            prevState.push(newTask);\r\n            return prevState;\r\n        });\r\n    };\r\n\r\n    let newTaskList = null;\r\n\r\n    if (inputFilterValue !== '') {\r\n        newTaskList = filteredTaskList(taskList, inputFilterValue);\r\n    } else if (displayedList === 'completed') {\r\n        newTaskList = taskList.filter(item => item.active === false);\r\n    } else if (displayedList === 'active') {\r\n        newTaskList = taskList.filter(item => item.active === true);\r\n    } else {\r\n        newTaskList = taskList;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Loader />\r\n            </div>\r\n            <div className='panel'>\r\n                <div>\r\n                    <Form addNewTask={addNewTask}/>\r\n                </div>\r\n                <input onChange={inputHandler} value={inputFilterValue} type=\"text\"/>\r\n                <div>\r\n                    <ButtonDispList displayList={displayList}/>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <TaskList taskList={newTaskList} deleteTask={deleteTask}\r\n                          importanceTask={importanceTask} activeTask={activeTask}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}